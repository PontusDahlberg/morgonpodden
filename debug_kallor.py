#!/usr/bin/env python3
"""
Debug k√§llsystem f√∂r att se varf√∂r l√§nkar saknas
"""
import json
import logging
from run_podcast_complete import generate_structured_podcast_content

# Konfigurera logging f√∂r att se vad som h√§nder
logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

def debug_kallor():
    """Debug varf√∂r k√§llor inte syns i RSS"""
    try:
        print("üîç DEBUGGAR K√ÑLLSYSTEM...")
        
        # Kolla scraped_content.json f√∂rst
        try:
            with open('scraped_content.json', 'r', encoding='utf-8') as f:
                scraped_data = json.load(f)
            print(f"üìÅ scraped_content.json: {len(scraped_data)} k√§llgrupper")
            
            for i, source_group in enumerate(scraped_data[:3]):
                source_name = source_group.get('source', 'Ok√§nd')
                items_count = len(source_group.get('items', []))
                print(f"  {i+1}. {source_name}: {items_count} artiklar")
                
                # Visa f√∂rsta artikeln om den finns
                if source_group.get('items'):
                    first_item = source_group['items'][0]
                    title = first_item.get('title', 'Ingen titel')[:60]
                    link = first_item.get('link', 'INGEN L√ÑNK')
                    print(f"     F√∂rsta artikel: {title}...")
                    print(f"     L√§nk: {link}")
                print()
                
        except Exception as e:
            print(f"‚ùå Fel vid l√§sning av scraped_content.json: {e}")
        
        # Test med enkel v√§derinfo
        weather_info = 'V√§dret idag: varierande molnighet'
        
        # Anropa funktionen och se vad som h√§nder med k√§llor
        print("üéØ TESTAR generate_structured_podcast_content...")
        content, articles = generate_structured_podcast_content(weather_info)
        
        print(f"üìä RESULTAT:")
        print(f"   Antal artiklar efter filtrering: {len(articles)}")
        
        if articles:
            for i, article in enumerate(articles[:5]):
                source = article.get('source', 'N/A')
                title = article.get('title', 'N/A')[:50]
                link = article.get('link', 'SAKNAS')
                print(f"   {i+1}. {source}")
                print(f"      Titel: {title}...")
                print(f"      L√§nk: {link}")
                print()
        else:
            print("   ‚ùå INGA ARTIKLAR HITTADES!")
            
    except Exception as e:
        print(f"‚ùå Fel i debug: {e}")
        import traceback
        traceback.print_exc()

if __name__ == "__main__":
    debug_kallor()