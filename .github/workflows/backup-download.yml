name: 🔄 Backup Episode Download

# Kör backup-nedladdning varje timme mellan 18:00-22:00 svensk tid som fallback
on:
  schedule:
    # Kör varje timme från 16:00-20:00 UTC (18:00-22:00 svensk tid)
    - cron: '0 16 * * *'  # 16:00 UTC = 18:00 svensk tid
    - cron: '0 17 * * *'  # 17:00 UTC = 19:00 svensk tid
    - cron: '0 18 * * *'  # 18:00 UTC = 20:00 svensk tid
    - cron: '0 19 * * *'  # 19:00 UTC = 21:00 svensk tid
    - cron: '0 20 * * *'  # 20:00 UTC = 22:00 svensk tid
  workflow_dispatch:  # Manuell körning för testning

env:
  PYTHON_VERSION: '3.10'

jobs:
  backup-download:
    name: 📥 Backup Download Episodes
    runs-on: ubuntu-latest
    
    steps:
    - name: 📥 Checkout repository
      uses: actions/checkout@v4
      
    - name: 🐍 Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ env.PYTHON_VERSION }}
        cache: 'pip'
        
    - name: 📦 Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install requests urllib3 schedule
        
    - name: 🔄 Run backup download
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        echo "🕐 $(date): Startar backup-nedladdning..."
        python auto_episode_downloader.py
        echo "✅ $(date): Backup-nedladdning slutförd"
        
    - name: 📝 Upload download logs
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: backup-download-logs-${{ github.run_number }}
        path: |
          auto_download.log
          local_episodes/
        retention-days: 7
        
    - name: 📊 Display download status
      if: always()
      run: |
        echo "📊 Backup Download Status Report:"
        echo "🕐 Tid: $(date)"
        if [ -f "auto_download.log" ]; then
          echo "📝 Senaste loggposter:"
          tail -10 auto_download.log
        fi
        if [ -d "local_episodes" ]; then
          echo "📁 Lokala episoder:"
          ls -la local_episodes/ || echo "Inga lokala episoder hittades"
        fi