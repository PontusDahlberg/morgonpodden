#!/usr/bin/env python3
"""
Kvalitetstest f√∂r Google Cloud Chirp3-HD svenska r√∂ster
Skapar testfiler f√∂r manuell bed√∂mning av r√∂stkvalitet
"""

import os
from google.cloud import texttospeech

def test_chirp3_voices():
    """Testar olika Chirp3-HD r√∂ster f√∂r kvalitetsj√§mf√∂relse"""
    
    # S√§tt upp service account credentials
    credentials_path = "google-cloud-service-account.json"
    if os.path.exists(credentials_path):
        os.environ['GOOGLE_APPLICATION_CREDENTIALS'] = credentials_path
        print(f"‚úÖ Anv√§nder credentials fr√•n: {credentials_path}")
    else:
        print("‚ùå Kunde inte hitta service account fil")
        return False
    
    try:
        client = texttospeech.TextToSpeechClient()
        
        # L√§ngre testtext som l√•ter mer som en podcast
        test_text = """
        V√§lkommen till dagens avsnitt av M√§nniska Maskin Milj√∂! 
        Idag ska vi prata om den senaste utvecklingen inom artificiell intelligens 
        och hur den p√•verkar v√•rt dagliga liv. 
        Vi b√∂rjar med att titta p√• de nya spr√•kmodellerna som har sl√§ppts den h√§r m√•naden,
        och sedan diskuterar vi vilka etiska fr√•gor som dyker upp n√§r AI blir allt mer avancerad.
        Det h√§r √§r verkligen sp√§nnande tider vi lever i!
        """
        
        # De b√§sta Chirp3-HD svenska r√∂sterna (baserat p√• listan)
        best_voices = [
            {"name": "sv-SE-Chirp3-HD-Achernar", "gender": "FEMALE", "desc": "Achernar (kvinna)"},
            {"name": "sv-SE-Chirp3-HD-Achird", "gender": "MALE", "desc": "Achird (man)"},
            {"name": "sv-SE-Chirp3-HD-Gacrux", "gender": "FEMALE", "desc": "Gacrux (kvinna)"},
            {"name": "sv-SE-Chirp3-HD-Fenrir", "gender": "MALE", "desc": "Fenrir (man)"},
            {"name": "sv-SE-Chirp3-HD-Zephyr", "gender": "FEMALE", "desc": "Zephyr (kvinna)"},
            {"name": "sv-SE-Chirp3-HD-Despina", "gender": "FEMALE", "desc": "Despina (kvinna)"},
            {"name": "sv-SE-Chirp3-HD-Iapetus", "gender": "MALE", "desc": "Iapetus (man)"},
            {"name": "sv-SE-Chirp3-HD-Charon", "gender": "MALE", "desc": "Charon (man)"},
        ]
        
        print(f"\nüé§ Testar {len(best_voices)} Chirp3-HD r√∂ster med l√§ngre podcasttext:")
        print("=" * 70)
        
        for voice_info in best_voices:
            voice_name = voice_info["name"]
            gender = getattr(texttospeech.SsmlVoiceGender, voice_info["gender"])
            desc = voice_info["desc"]
            
            print(f"üé≠ {desc}...")
            
            try:
                # Konfigurera r√∂st
                voice = texttospeech.VoiceSelectionParams(
                    language_code="sv-SE",
                    name=voice_name,
                    ssml_gender=gender,
                )
                
                # Audio konfiguration (h√∂gsta kvalitet)
                audio_config = texttospeech.AudioConfig(
                    audio_encoding=texttospeech.AudioEncoding.MP3,
                    sample_rate_hertz=24000,
                    speaking_rate=1.0,
                    pitch=0.0,
                    volume_gain_db=0.0
                )
                
                # Text input
                synthesis_input = texttospeech.SynthesisInput(text=test_text)
                
                # Generera tal
                response = client.synthesize_speech(
                    input=synthesis_input,
                    voice=voice,
                    audio_config=audio_config
                )
                
                # Spara till fil
                safe_name = voice_name.lower().replace("-", "_")
                filename = f"audio/chirp3_quality_{safe_name}.mp3"
                
                with open(filename, "wb") as out:
                    out.write(response.audio_content)
                
                file_size = len(response.audio_content)
                print(f"   ‚úÖ {filename} ({file_size} bytes)")
                
            except Exception as e:
                print(f"   ‚ùå Fel: {str(e)}")
        
        print("\nüí° REKOMMENDATION:")
        print("Lyssna p√• filerna i audio/ mappen och j√§mf√∂r kvaliteten")
        print("V√§lj den r√∂st som l√•ter mest naturlig f√∂r podcast-anv√§ndning")
        print("\nFilerna b√∂rjar med 'chirp3_quality_*'")
        
        return True
        
    except Exception as e:
        print(f"‚ùå Fel vid setup: {str(e)}")
        return False

if __name__ == "__main__":
    print("üéôÔ∏è Google Cloud Chirp3-HD Kvalitetstest")
    print("=" * 50)
    test_chirp3_voices()
