#!/usr/bin/env python3
"""
Test f칬r att generera en l칛ngre podcast och se exakt vad som h칛nder
"""

import sys
sys.path.append('.')
from emotion_analyzer import split_content_by_emotion

def test_longer_content():
    # L칛ngre, mer realistiskt podcast-inneh친ll
    content = """V칛lkommen till M칛nniska Maskin Milj칬, vecka 38! Jag heter Sanna och tillsammans med George kommer vi ber칛tta om veckans tekniknyheter.

Den h칛r veckan har varit helt fantastisk med sp칛nnande genombrott inom artificiell intelligens. Forskare har utvecklat nya modeller som kan f칬rst친 m칛nskliga k칛nslor p친 ett helt nytt s칛tt.

Vi har ocks친 f친tt allvarliga rapporter om cybers칛kerhetshot som p친verkar svenska f칬retag. Det 칛r viktigt att alla tar detta p친 allvar och f칬rst칛rker sina s칛kerhetsrutiner.

Roliga nyheter kommer fr친n tech-v칛rlden d칛r nya gadgets g칬r vardagen enklare och mer milj칬v칛nlig. Det h칛r visar hur innovation kan l칬sa verkliga problem.

F칬r att avsluta vill vi dela med oss av forskning som visar hur automation och AI kan hj칛lpa oss n친 klimatm친len. Det h칛r 칛r professionell utveckling som kommer p친verka oss alla.

Det var allt f칬r denna vecka. Tack f칬r att ni lyssnade p친 M칛nniska Maskin Milj칬!"""

    print(f'游닇 Analyserar podcast-inneh친ll ({len(content)} tecken)')
    segments = split_content_by_emotion(content)

    print(f'\n游꿟 Resultat: {len(segments)} segment(s)')
    total_chars = 0
    
    for i, seg in enumerate(segments, 1):
        chars = len(seg['text'])
        total_chars += chars
        print(f'游꿗 Segment {i}: {seg["voice_name"]} ({seg["emotion"]})')
        print(f'   Text ({chars} tecken): {seg["text"][:100]}...')
        print(f'   Settings: stability={seg["voice_settings"]["stability"]}, style={seg["voice_settings"]["style"]}')
        print()
    
    print(f'游늵 Sammanfattning:')
    print(f'   Total text: {total_chars} tecken')
    print(f'   Genomsnitt per segment: {total_chars // len(segments)} tecken')
    
    # Uppskatta audio-l칛ngd (ca 150 ord/minut, 5 tecken/ord)
    estimated_words = total_chars / 5
    estimated_minutes = estimated_words / 150
    print(f'   Uppskattad l칛ngd: {estimated_minutes:.1f} minuter')

if __name__ == "__main__":
    test_longer_content()
